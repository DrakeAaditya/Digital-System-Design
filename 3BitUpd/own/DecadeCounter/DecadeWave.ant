--------------------------------------------------------------------------------
-- Copyright (c) 1995-2003 Xilinx, Inc.
-- All Right Reserved.
--------------------------------------------------------------------------------
--   ____  ____ 
--  /   /\/   / 
-- /___/  \  /    Vendor: Xilinx 
-- \   \   \/     Version : 8.1i
--  \   \         Application : ISE
--  /   /         Filename : DecadeWave.ant
-- /___/   /\     Timestamp : Thu Apr 12 09:39:14 2018
-- \   \  /  \ 
--  \___\/\___\ 
--
--Command: 
--Design Name: DecadeWave
--Device: Xilinx
--

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
USE IEEE.STD_LOGIC_TEXTIO.ALL;
USE STD.TEXTIO.ALL;

ENTITY DecadeWave IS
END DecadeWave;

ARCHITECTURE testbench_arch OF DecadeWave IS
    FILE RESULTS: TEXT OPEN WRITE_MODE IS "E:\College\6th Sem\DSD\DSD LAB\3BitUpd\own\DecadeCounter\DecadeWave.ano";

    COMPONENT Decade
        PORT (
            PRE : In std_logic;
            CLK : In std_logic;
            CLR : In std_logic;
            A : In std_logic;
            Y : Out std_logic_vector (3 DownTo 0)
        );
    END COMPONENT;

    SIGNAL PRE : std_logic := '1';
    SIGNAL CLK : std_logic := '0';
    SIGNAL CLR : std_logic := '0';
    SIGNAL A : std_logic := '0';
    SIGNAL Y : std_logic_vector (3 DownTo 0) := "0000";

    SHARED VARIABLE TX_ERROR : INTEGER := 0;
    SHARED VARIABLE TX_OUT : LINE;

    constant PERIOD : time := 60 ns;
    constant DUTY_CYCLE : real := 0.5;
    constant OFFSET : time := 0 ns;

    BEGIN
        UUT : Decade
        PORT MAP (
            PRE => PRE,
            CLK => CLK,
            CLR => CLR,
            A => A,
            Y => Y
        );

        PROCESS    -- clock process for CLK
        BEGIN
            WAIT for OFFSET;
            CLOCK_LOOP : LOOP
                CLK <= '0';
                WAIT FOR (PERIOD - (PERIOD * DUTY_CYCLE));
                CLK <= '1';
                WAIT FOR (PERIOD * DUTY_CYCLE);
            END LOOP CLOCK_LOOP;
        END PROCESS;

        PROCESS    -- Annotation process for CLK
            VARIABLE TX_TIME : INTEGER := 0;

            PROCEDURE ANNOTATE_Y(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", Y, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, Y);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
        BEGIN
            WAIT for 1 fs;
            ANNOTATE_Y(0);
            WAIT for OFFSET;
            TX_TIME := TX_TIME + 0;
            ANNO_LOOP : LOOP
                --Rising Edge
                WAIT for 45 ns;
                TX_TIME := TX_TIME + 45;
                ANNOTATE_Y(TX_TIME);
                WAIT for 15 ns;
                TX_TIME := TX_TIME + 15;
            END LOOP ANNO_LOOP;
        END PROCESS;

        PROCESS
            BEGIN
                -- -------------  Current Time:  75ns
                WAIT FOR 75 ns;
                CLR <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  195ns
                WAIT FOR 120 ns;
                A <= '1';
                -- -------------------------------------
                WAIT FOR 865 ns;

                STD.TEXTIO.write(TX_OUT, string'("Total[]"));
                STD.TEXTIO.writeline(RESULTS, TX_OUT);
                ASSERT (FALSE) REPORT
                    "Success! Simulation for annotation completed"
                    SEVERITY FAILURE;
            END PROCESS;

    END testbench_arch;

